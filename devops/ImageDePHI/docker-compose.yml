---
version: '3'
services:
  girder:
    image: dsarchive/dsa_wsi_deid
    build: ../..
    # Instead of privileged mode, fuse can use:
    # devices:
    #   - /dev/fuse:/dev/fuse
    # security_opt:
    #   - apparmor:unconfined
    # cap_add:
    #   - SYS_ADMIN
    # but these may be somewhat host specific, so we default to privileged.  If
    # the docker daemon is being run with --no-new-privileges, fuse may not
    # work.
    privileged: true
    # Set DSA_USER to a user id that is part of the docker group (e.g.,
    # `DSA_USER=$(id -u):$(id -g)`).  This makes files in assetstores and logs
    # owned by that user and provides permissions to manage docker
    environment:
      DSA_USER: ${DSA_USER:-}
      DSA_PROVISION_YAML: ${DSA_PROVISION_YAML:-/opt/digital_slide_archive/devops/dsa/provision.yaml}
    restart: unless-stopped
    # Set DSA_PORT to expose the interface on another port (default 8080).
    ports:
      - "${DSA_PORT:-8080}:8080"
    volumes:
      # Needed to use slicer_cli_web to run docker containers
      - /usr/bin/docker:/usr/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock
      # Default assetstore
      - ./assetstore:/assetstore
      # Location of girder.cfg
      - ./girder.cfg:/etc/girder.cfg
      # Location of provision.yaml
      - ./provision.yaml:/opt/digital_slide_archive/devops/dsa/provision.yaml
      # Location to store logs
      - ./logs:/logs

    depends_on:
      - mongodb
      - memcached
      - rabbitmq
    command: /opt/digital_slide_archive/devops/dsa/start_girder.sh
  mongodb:
    image: "mongo:latest"
    # Set DSA_USER to your user id (e.g., `DSA_USER=$(id -u):$(id -g)`)
    # so that database files are owned by yourself.
    user: ${DSA_USER:-PLEASE SET DSA_USER}
    restart: unless-stopped
    # Using --nojournal means that changes can be lost between the last
    # checkpoint and an unexpected shutdown, but can substantially reduce
    # writes.
    command: --nojournal
    volumes:
      # Location to store database files
      - ./db:/data/db
    # Uncomment to allow access to the database from outside of the docker
    # network.
    # ports:
    #   - "27017"
    logging:
      options:
        max-size: "10M"
        max-file: "5"
  memcached:
    image: memcached
    command: -m 4096 --max-item-size 8M
    restart: unless-stopped
    # Uncomment to allow access to memcached from outside of the docker network
    # ports:
    #   - "11211"
    logging:
      options:
        max-size: "10M"
        max-file: "5"
  rabbitmq:
    image: "rabbitmq:latest"
    restart: unless-stopped
    # Uncomment to allow access to rabbitmq from outside of the docker network
    # ports:
    #   - "5672"
    logging:
      options:
        max-size: "10M"
        max-file: "5"
  worker:
    image: dsarchive/dsa_common
    # Set DSA_USER to a user id that is part of the docker group (e.g.,
    # `DSA_USER=$(id -u):$(id -g)`).  This provides permissions to manage
    # docker
    environment:
      DSA_USER: ${DSA_USER:-}
      DSA_WORKER_CONCURRENCY: ${DSA_WORKER_CONCURRENCY:-2}
      TMPDIR:
    restart: unless-stopped
    volumes:
      # Needed to use slicer_cli_web to run docker containers
      - /usr/bin/docker:/usr/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock
      # Needed to allow transferring data to slicer_cli_web docker containers
      - ${TMPDIR:-/tmp}:${TMPDIR:-/tmp}
      # Add additional mounts here to get access to existing files on your
      # system if they have the same path as on the girder container.
    depends_on:
      - rabbitmq
    command: /opt/digital_slide_archive/devops/dsa/start_worker.sh
    logging:
      options:
        max-size: "10M"
        max-file: "5"
